stages:
  - build
  - bundle

build:linux:
  stage: build
  image: dekker1/minibuild:Qt
  script:
    - mkdir -p build; cd build
    - qmake -makefile "CONFIG+=bundled" "DEFINES+=MINIZINC_IDE_BUILD=\\\\\\\"\"${CI_PIPELINE_ID}\\\\\\\"\"" PREFIX=/usr ../MiniZincIDE/MiniZincIDE.pro
    - make -j4
    - make -j4 INSTALL_ROOT=../ide install; find ../ide/
    - cd ..
    - linuxdeployqt ide/usr/bin/MiniZincIDE -bundle-non-qt-libs -no-translations -no-copy-copyright-files
  tags:
    - linux
    - docker
  artifacts:
    paths:
      - ide/

build:osx:
  stage: build
  variables:
    QTDIR: "$OSXQTDIR"
  script:
    - export PATH="$QTDIR/bin:$PATH"
    - mkdir -p build; cd build
    - qmake -makefile "CONFIG+=bundled" "DEFINES+=MINIZINC_IDE_BUILD=\\\\\\\"\"${CI_PIPELINE_ID}\\\\\\\"\"" ../MiniZincIDE/MiniZincIDE.pro
    - make -j4
    - cp -r MiniZincIDE.app ..
  tags:
    - osx
    - cpp
    - qt
  artifacts:
    paths:
      - MiniZincIDE.app

build:win64:
  stage: build
  variables:
    QTDIR: "$WINQTDIR"
  before_script:
    - call "C:\Program Files (x86)\Microsoft Visual Studio 14.0/VC/vcvarsall.bat" amd64
  script:
    - if not exist "build" mkdir build
    - if not exist "ide" mkdir ide
    - cd build
    - echo set -x; export PATH=`cygpath -u %QTDIR%/bin`:$PATH; qmake "CONFIG+=bundled" "DEFINES+=MINIZINC_IDE_BUILD=\\\\\\\"\"${CI_PIPELINE_ID}\\\\\\\"\"" ../MiniZincIDE/MiniZincIDE.pro; nmake; cp release/MiniZincIDE.exe ../ide; cd ../ide; windeployqt --no-translations --no-compiler-runtime --no-system-d3d-compiler MiniZincIDE.exe > build.sh
    - d2u build.sh
    - bash build.sh
  tags:
    - win64
    - cpp
    - qt
  artifacts:
    paths:
      - ide/
