stages:
  - build
  - package

# ----------- Build MiniZincIDE -----------

build:linux:
  stage: build
  image: dekker1/minibuild:Qt
  script:
    - mkdir -p build; cd build
    - qmake -makefile "CONFIG+=bundled" "DEFINES+=MINIZINC_IDE_BUILD=\\\\\\\"\"${CI_PIPELINE_ID}\\\\\\\"\"" PREFIX=/usr ../MiniZincIDE/MiniZincIDE.pro
    - make -j4
    - make -j4 INSTALL_ROOT=../ide install; find ../ide/
    - cd ..
    - linuxdeployqt ide/usr/bin/MiniZincIDE -bundle-non-qt-libs -no-translations -no-copy-copyright-files
  tags:
    - linux
    - docker
  artifacts:
    paths:
      - ide/

build:osx:
  stage: build
  variables:
    QTDIR: "$OSXQTDIR"
  script:
    - export PATH="$QTDIR/bin:$PATH"
    - mkdir -p build; cd build
    - qmake -makefile "CONFIG+=bundled" "DEFINES+=MINIZINC_IDE_BUILD=\\\\\\\"\"${CI_PIPELINE_ID}\\\\\\\"\"" ../MiniZincIDE/MiniZincIDE.pro
    - make -j4
    - cp -r MiniZincIDE.app ..
  tags:
    - osx
    - cpp
    - qt
  artifacts:
    paths:
      - MiniZincIDE.app

build:win64:
  stage: build
  variables:
    QTDIR: "$WINQTDIR"
  before_script:
    - call "C:\Program Files (x86)\Microsoft Visual Studio 14.0/VC/vcvarsall.bat" amd64
  script:
    - if not exist "build" mkdir build
    - if not exist "ide" mkdir ide
    - cd build
    - echo set -x; export PATH=`cygpath -u %QTDIR%/bin`:$PATH; qmake "CONFIG+=bundled" "DEFINES+=MINIZINC_IDE_BUILD=\\\\\\\"\"${CI_PIPELINE_ID}\\\\\\\"\"" ../MiniZincIDE/MiniZincIDE.pro; nmake; cp release/MiniZincIDE.exe ../ide; cd ../ide; windeployqt --no-translations --no-compiler-runtime --no-system-d3d-compiler MiniZincIDE.exe > build.sh
    - d2u build.sh
    - bash build.sh
  tags:
    - win64
    - cpp
    - qt
  artifacts:
    paths:
      - ide/

# ----------- MiniZinc Packaging -----------
.packaging_setup: &packaging_setup
  before_script:
    ### Set the MZNVERSION variable
    - "if [ -n \"$CI_COMMIT_TAG\" ]; then MZNVERSION=\"$CI_COMMIT_TAG\"; else MZNVERSION=\"$CI_PIPELINE_ID\"; fi"
    ### Choose the MiniZinc compiler branch
    - "if [ -n \"$CI_COMMIT_TAG\" ]; then MZNREF=\"$CI_COMMIT_TAG\"; elif [ \"$CI_COMMIT_REF_NAME\" = \"master\" ]; then MZNREF=\"master\"; else MZNREF=\"develop\"; fi"
    ### Download Dependencies
    - curl --silent -o minizinc.zip --location --header "PRIVATE-TOKEN:$ACCESS_TOKEN" "https://gitlab.com/api/v4/projects/minizinc%2Fminizinc/jobs/artifacts/$MZNREF/download?job=build:$MZNARCH"
    - unzip -q minizinc.zip
    - curl --silent -o vendor.zip --location --header "PRIVATE-TOKEN:$ACCESS_TOKEN" "https://gitlab.com/api/v4/projects/minizinc%2Fvendor/jobs/artifacts/master/download?job=solvers:$MZNARCH"
    - unzip -q vendor.zip
    - "[ $DOWNLOAD_GLOBALIZER -eq 1 ] && curl --silent -o globalizer.zip --location --header \"PRIVATE-TOKEN:$ACCESS_TOKEN\" \"https://gitlab.com/api/v4/projects/minizinc%2FGlobalizer/jobs/artifacts/master/download?job=build:$MZNARCH\" && unzip -q globalizer.zip"
    - "[ $DOWNLOAD_FINDMUS -eq 1 ] && curl --silent -o findmus.zip --location --header \"PRIVATE-TOKEN:$ACCESS_TOKEN\" \"https://gitlab.com/api/v4/projects/minizinc%2FFindMUS/jobs/artifacts/master/download?job=build:$MZNARCH\" && unzip -q findmus.zip"

package:linux:
  stage: package
  image: dekker1/minibuild:package
  variables:
    MZNARCH: "linux"
    DOWNLOAD_GLOBALIZER: 1
    DOWNLOAD_FINDMUS: 1
  <<: *packaging_setup
  script:
    - PACKAGE=MiniZincIDE-${MZNVERSION}-bundle-linux
    - mkdir -p $PACKAGE/
    ### Package IDE
    - mv ide/usr/* $PACKAGE/
    - cp resources/scripts/MiniZincIDE.sh $PACKAGE/
    ### Package MiniZinc
    - mv minizinc/bin/* $PACKAGE/bin/
    - mv minizinc/share $PACKAGE/share
    ### Replace mzn2fzn and solns2out by symlinks to reduce package size
    - rm $PACKAGE/bin/mzn2fzn $PACKAGE/bin/solns2out
    - (cd $PACKAGE/bin; ln -s minizinc mzn2fzn; ln -s minizinc solns2out)
    ### Package vendor solvers
    - mv vendor/gecode/bin/fzn-gecode $PACKAGE/bin/
    - mv vendor/gecode/share/gecode/mznlib $PACKAGE/share/minizinc/gecode
    - mv vendor/chuffed/bin/fzn-chuffed $PACKAGE/bin/
    - mv vendor/chuffed/share/chuffed/mznlib $PACKAGE/share/minizinc/chuffed
    ### Package Globalizer
    - mv globalizer/bin/minizinc-globalizer $PACKAGE/bin/
    - mv globalizer/share/globalizer/mznlib $PACKAGE/share/minizinc/globalizer
    ### Package findMUS
    - mv findMUS/bin/findMUS $PACKAGE/bin/
    ### Package solver scripts
    - cp resources/scripts/fzn-gecode-gist $PACKAGE/bin/
    ### Package default settings
    - mkdir -p $PACKAGE/share/minizinc/solvers/
    - cp resources/solvers/*.msc $PACKAGE/share/minizinc/solvers/
    - cp resources/Preferences.json $PACKAGE/share/minizinc/
    ### Strip included binaries
    - (cd $PACKAGE/bin; strip minizinc fzn-gecode fzn-chuffed findMUS minizinc-globalizer mzn2doc)
    - cp resources/misc/README $PACKAGE
    ### Compress package
    - tar -czf $PACKAGE.tgz $PACKAGE
  artifacts:
    name: "minizinc_bundle_linux_${CI_PIPELINE_ID}"
    paths:
      - MiniZincIDE*.tgz
  dependencies:
    - build:linux
  tags:
    - linux
    - docker
